name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep tag_name | cut -d '"' -f 4)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      - name: Build and start services
        run: |
          docker-compose up -d --build

      - name: Wait for services to be ready
        run: |
          echo "Waiting for services to be ready..."
          for i in {1..30}; do
            if docker-compose exec app curl -s http://localhost:8000/; then
              echo "Services are ready!"
              break
            else
              echo "Waiting for services to be ready..."
              sleep 5
            fi
          done
          if [ $i -eq 30 ]; then
            echo "Application did not start in time"
            exit 1
          fi

      - name: Run Behave tests
        run: |
          docker-compose exec app behave

      - name: Run unit tests with coverage
        run: |
          docker-compose exec app coverage run -m pytest tests/    # Correr los tests con coverage
          docker-compose exec app coverage xml -o coverage.xml     # Generar el reporte de coverage
          
      - name: List files in container
        run: |
          docker-compose exec app ls -al /    
      - name: Copy coverage report to host    
        run: |
          docker cp $(docker-compose ps -q app):/app/coverage.xml .    # Copiar el reporte de coverage al host

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v2.1.0
        with:
          args: >
            -Dsonar.projectKey=Renato200419_PC1-CC3S2
            -Dsonar.organization=renato200419
            -Dsonar.sources=src
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.python.coverage.reportPaths=coverage.xml
                
      - name: Update pip and setuptools
        run: |
          docker-compose exec app pip install --upgrade pip setuptools

      - name: Audit dependencies
        run: |
          docker-compose exec app pip install pip-audit
          docker-compose exec app pip-audit

      - name: Tear down services
        run: |
          docker-compose down
