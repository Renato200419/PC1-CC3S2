name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:13
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: secret
          POSTGRES_DB: dadosdb
        options: >-
          --health-cmd="pg_isready -U admin -d dadosdb" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=10
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade setuptools
          pip install -r requirements.txt

      - name: Verify PostgreSQL Health Status
        run: |
          echo "Verifying PostgreSQL health status..."
          docker ps
          docker inspect --format='{{json .State.Health}}' $(docker ps -q --filter ancestor=postgres:13)

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h db -p 5432 -U admin; do
            echo "Waiting for PostgreSQL to be available..."
            sleep 5
          done
          echo "PostgreSQL is ready!"

      - name: Run tests
        env:
          DATABASE_URL: postgresql://admin:secret@db:5432/dadosdb
          PYTHONPATH: .
        run: |
          pytest tests/

      - name: Install pip-audit
        run: pip install pip-audit

      - name: Audit dependencies
        run: pip-audit

      - name: Build Docker image
        run: docker build -t juego-dados-competitivo .

      - name: Run Docker container
        run: docker run -d -p 8000:8000 juego-dados-competitivo

      - name: Wait for FastAPI to be ready
        run: |
          until curl -s http://localhost:8000/; do
            echo "Esperando a que FastAPI est√© disponible..."
            sleep 5
          done
          echo "FastAPI is ready!"
